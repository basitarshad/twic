{"version":3,"sources":["../../src/components/DatePicker.tsx"],"names":["isEmptyOrNil","Utilities","CalendarIcon","props","color","pickerStyle","APP_CONSTANTS","IS_ANDROID","position","right","Fonts","size","tiny","medium","DatePickerField","React","useState","pickerColor","Colors","newDimGrey","text","newCharcoalDarkGrey","icon","charcoalLightGrey","colors","setColors","textInputRef","useRef","onConfirmDate","label","value","labelPaddingTop","testId","errorMessage","disabled","textProps","iconProps","pickerMode","RenderCustomIcon","fieldStyle","width","paddingLeft","paddingRight","paddingVertical","onOpenHandler","datePickerProps","customStyles","pickerStateColor","newDisabled","error","initialValue","iconColor","disabledText","paddingTop","Metrics","screenHorizontalPadding","onCancelPress","handleDateSubmission","date","onCloseModal","current","handleBlur","RenderDatePicker","Date","handleFocus","newBlue","dateTouchBody","flexDirection","height","paddingHorizontal","dateInput","top","borderWidth","alignItems","btnTextConfirm","blue","fontFamily","fontSize","h3","dateText","small","black","placeholderText","datePicker","justifyContent","backgroundColor","white","textAlign","PICKER_THEME","primary","placeholder"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StyleProp, View } from 'react-native';\nimport DatePicker from 'react-native-datepicker';\nimport { If, Then } from 'react-if';\nimport { clone } from 'ramda';\nimport Icon from 'react-native-vector-icons/AntDesign';\n\nimport { APP_CONSTANTS, Colors, Metrics, Utilities, Fonts } from '../commons';\nimport { AppText } from './AppText';\nimport { PICKER_THEME } from './Picker';\nimport { DatePickerProps } from './types';\nimport { TextInput } from 'react-native-paper';\n\nconst { isEmptyOrNil } = Utilities;\n\nexport const CalendarIcon: React.FC<{ color: string }> = props => {\n  const { color } = props;\n  const pickerStyle: StyleProp<any> = APP_CONSTANTS.IS_ANDROID\n    ? {\n        position: 'absolute',\n        right: !APP_CONSTANTS.IS_ANDROID ? 0 : 5,\n        color: color,\n      }\n    : { color: color };\n\n  return <Icon name=\"calendar\" style={pickerStyle} size={APP_CONSTANTS.IS_ANDROID ? Fonts.size.tiny : Fonts.size.medium + 1} color={color} />;\n};\n\nexport const DatePickerField = (props: DatePickerProps) => {\n  const [colors, setColors] = React.useState({ pickerColor: Colors.newDimGrey, text: Colors.newCharcoalDarkGrey, icon: Colors.charcoalLightGrey });\n  const textInputRef = React.useRef<any>(null);\n  const {\n    onConfirmDate,\n    label = '',\n    value = '',\n    labelPaddingTop = 4,\n    testId = '',\n    errorMessage = '',\n    disabled = false,\n    textProps = {},\n    iconProps = {},\n    pickerMode = 'outlined',\n    RenderCustomIcon = CalendarIcon,\n    fieldStyle = {\n      width: '100%',\n      paddingLeft: 0,\n      paddingRight: !APP_CONSTANTS.IS_ANDROID ? 0 : 5,\n      paddingVertical: 5,\n    },\n    onOpenHandler = () => {},\n    datePickerProps = {},\n    customStyles = {},\n  } = props;\n  const pickerStateColor = disabled ? Colors.newDisabled : isEmptyOrNil(errorMessage) ? colors.pickerColor : Colors.error;\n\n  const initialValue = clone(value);\n  const iconColor = disabled ? Colors.disabledText : colors.icon;\n  const paddingTop = pickerMode === 'flat' ? Metrics.screenHorizontalPadding : 0;\n\n  const onCancelPress = () => {\n    onConfirmDate(initialValue);\n  };\n\n  const handleDateSubmission = date => {\n    onConfirmDate(date);\n  };\n  const onCloseModal = () => {\n    textInputRef.current.handleBlur();\n    setColors({ ...colors, pickerColor: Colors.newDimGrey, icon: Colors.charcoalLightGrey });\n  };\n\n  const RenderDatePicker = () => (\n    <DatePicker\n      date={value}\n      mode=\"date\"\n      placeholder=\"Choose date\"\n      format=\"ll\"\n      minDate=\"1970-01-01\"\n      maxDate={new Date()}\n      confirmBtnText=\"Done\"\n      cancelBtnText=\"Cancel\"\n      onOpenModal={() => {\n        textInputRef.current.handleFocus();\n        setColors({ ...colors, pickerColor: Colors.newBlue, icon: Colors.newBlue });\n        onOpenHandler();\n      }}\n      onCloseModal={onCloseModal}\n      testID={testId}\n      onCancelPress={() => onCancelPress()}\n      onDateChange={date => {\n        onCloseModal();\n        handleDateSubmission(date);\n      }}\n      showIcon\n      allowFontScaling={false}\n      adjustsFontSizeToFit={true}\n      iconComponent={<RenderCustomIcon {...iconProps} color={isEmptyOrNil(errorMessage) ? iconColor : Colors.error} />}\n      style={fieldStyle}\n      customStyles={{\n        dateTouchBody: {\n          flexDirection: 'row',\n          height: 45,\n          paddingHorizontal: 15,\n          paddingTop: paddingTop,\n        },\n        dateInput: {\n          top: -2,\n          height: 20,\n          borderWidth: 0,\n          alignItems: 'flex-start',\n        },\n        btnTextConfirm: {\n          color: Colors.blue,\n          fontFamily: 'TTCommons-DemiBold',\n          fontSize: Fonts.size.h3,\n        },\n        dateText: {\n          fontSize: Fonts.size.small,\n          fontFamily: 'TTCommons-Regular',\n          color: Colors.black,\n          paddingTop: labelPaddingTop,\n        },\n        placeholderText: {\n          fontSize: Fonts.size.small,\n          fontFamily: 'TTCommons-Regular',\n          paddingTop: labelPaddingTop,\n          color: Colors.charcoalLightGrey,\n        },\n        // fixing the alignment for ios14\n        datePicker: {\n          justifyContent: 'center',\n        },\n        ...customStyles,\n      }}\n      {...datePickerProps}\n    />\n  );\n\n  return (\n    <>\n      {/* @ts-ignore */}\n      <TextInput\n        style={{ backgroundColor: Colors.white, textAlign: 'auto' }}\n        theme={{\n          ...PICKER_THEME,\n          colors: {\n            primary: Colors.blue,\n            error: Colors.error,\n            disabled: Colors.newDisabled,\n            placeholder: pickerStateColor,\n            text: Colors.black,\n          },\n        }}\n        ref={textInputRef}\n        underlineColor={pickerStateColor}\n        underlineColorAndroid={pickerStateColor}\n        testID={testId}\n        accessibilityLabel={testId}\n        mode={pickerMode}\n        label={!isEmptyOrNil(value) ? label : ''}\n        value={!isEmptyOrNil(value) ? value : ''}\n        error={!isEmptyOrNil(errorMessage) ? true : false}\n        render={RenderDatePicker}\n        {...textProps}\n      />\n      <If condition={!disabled && !isEmptyOrNil(errorMessage)}>\n        <Then>\n          <View>\n            <AppText kind={'Error'}>{errorMessage}</AppText>\n          </View>\n        </Then>\n      </If>\n    </>\n  );\n};\n"],"file":"DatePicker.js"}